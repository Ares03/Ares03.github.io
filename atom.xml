<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ares03&amp;Lizzie</title>
  
  <subtitle>即使做咸鱼也要做最咸的一条。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-21T04:14:37.081Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ares03&amp;Lizzie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JDBC异常排除</title>
    <link href="http://yoursite.com/2019/11/21/JDBC%E5%BC%82%E5%B8%B8%E6%8E%92%E9%99%A4/"/>
    <id>http://yoursite.com/2019/11/21/JDBC异常排除/</id>
    <published>2019-11-21T04:10:03.000Z</published>
    <updated>2019-11-21T04:14:37.081Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IDEA中链接JDBC出现的异常排查"><a href="#IDEA中链接JDBC出现的异常排查" class="headerlink" title="IDEA中链接JDBC出现的异常排查"></a>IDEA中链接JDBC出现的异常排查</h1><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">package com.huang.Jtest;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.Statement;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Test01 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        System.out.println(&quot;请输入地址&quot;);</span><br><span class="line">        String addrs = sc.nextLine();</span><br><span class="line">        System.out.println(&quot;请输入名字&quot;);</span><br><span class="line">        String name = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        boolean flag = new Test01().login(addrs,name);</span><br><span class="line">        if(flag)&#123;</span><br><span class="line">            System.out.println(&quot;查询成功&quot;);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            System.out.println(&quot;查询失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public boolean login(String addrs ,String name) &#123;</span><br><span class="line">        if(addrs == null || name == null)&#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        Statement stmt = null;</span><br><span class="line">        ResultSet rs = null;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">            Connection conn = DriverManager.getConnection(&quot;jdbc:mysql://127.0.01:3306/2019?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT&quot;,&quot;root&quot;,&quot;123456&quot;);</span><br><span class="line">            String sql = &quot;select * from cars where name=&apos;&quot;+name+&quot;&apos;and addrs=&apos;&quot;+addrs+&quot;&apos;&quot;;</span><br><span class="line">             stmt = conn.createStatement();</span><br><span class="line">             rs = stmt.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">            if(rs.next())&#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="异常及解决方案"><a href="#异常及解决方案" class="headerlink" title="异常及解决方案"></a>异常及解决方案</h2><p>1、SSL异常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</span><br></pre></td></tr></table></figure><p>方案</p><p>Put the <em>useSSL=false</em>at the end of the name database:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：Connection con=DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/test?useSSL=false&quot;,&quot;root&quot;,&quot;root&quot;);</span><br></pre></td></tr></table></figure><p>2、SQL样式异常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax;</span><br></pre></td></tr></table></figure><p>方案</p><p>检查sql语句是否出错，函数是否开/关</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;IDEA中链接JDBC出现的异常排查&quot;&gt;&lt;a href=&quot;#IDEA中链接JDBC出现的异常排查&quot; class=&quot;headerlink&quot; title=&quot;IDEA中链接JDBC出现的异常排查&quot;&gt;&lt;/a&gt;IDEA中链接JDBC出现的异常排查&lt;/h1&gt;&lt;h2 id=&quot;测
      
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="JDBC" scheme="http://yoursite.com/tags/JDBC/"/>
    
      <category term="IDEA工具" scheme="http://yoursite.com/tags/IDEA%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>关于Java中的String</title>
    <link href="http://yoursite.com/2019/06/20/%E5%85%B3%E4%BA%8EJava%E4%B8%AD%E7%9A%84String/"/>
    <id>http://yoursite.com/2019/06/20/关于Java中的String/</id>
    <published>2019-06-19T23:25:52.000Z</published>
    <updated>2019-06-20T00:39:09.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的联结"><a href="#字符串的联结" class="headerlink" title="字符串的联结"></a>字符串的联结</h1><p>1、使用join方法(适合少量字符串，低效)</p><p><code>String names=String.join(&quot;,&quot;,&quot;Peter&quot;,&quot;Paul&quot;)</code></p><p>2、使用StringBuilder方法（适合大量字符串，高效）</p><p>具体参考API范例</p><h1 id="字符串的拆分"><a href="#字符串的拆分" class="headerlink" title="字符串的拆分"></a>字符串的拆分</h1><p>1、通过substring方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String a=&quot;Hello,World!&quot;;</span><br><span class="line">String b=a.substring(7,12);</span><br></pre></td></tr></table></figure></p><p>2、利用split来指定分隔符进行字符串分割<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String names=&quot;Peter,Paul,Mary&quot;;</span><br><span class="line">String[] res=names.split(&quot;,&quot;);</span><br></pre></td></tr></table></figure></p><p><em>PS:拆分后需要重新遍历数组才能得到输出结果，另外空格的输入方式是“\\s”。</em></p><h1 id="字符串的比较"><a href="#字符串的比较" class="headerlink" title="字符串的比较"></a>字符串的比较</h1><p>1、<br><code>location.equals(&quot;world&quot;);</code><br>最好不要使用“==”方式，容易引起冲突；</p><p>2、<br><code>location.equalsIgnoreCase(&quot;world&quot;);</code><br>利用该语句可以进行忽略大小写的比较；</p><h1 id="数字和字符串的转换"><a href="#数字和字符串的转换" class="headerlink" title="数字和字符串的转换"></a>数字和字符串的转换</h1><p>1、把数字转换为字符串形式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int n=42;</span><br><span class="line">String str=Integer.toString(n);//把数字转换为字符串（&quot;42&quot;）;</span><br><span class="line">str=Integer.toString(n,2);     //把数字转换为二进制形式的字符串(&quot;101010&quot;);</span><br></pre></td></tr></table></figure></p><p>2、把字符串转换为数字形式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String str=&quot;42&quot;;</span><br><span class="line">int n=Integer.ParseInt(str);//输出结果是（101010）；</span><br><span class="line">n=Integer.ParseInt(str,2);//输出结果是（42）；</span><br></pre></td></tr></table></figure></p><h1 id="字符串的拼接"><a href="#字符串的拼接" class="headerlink" title="字符串的拼接"></a>字符串的拼接</h1><p>注意区分一下两个语句的输出结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(&quot;输出结果是：&quot;+11+2);//(输出结果是：112)；</span><br><span class="line">System.out.println(&quot;输出结果是：&quot;+(11+2);//（输出结果是：13）；</span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文主要是对String字符串一些基本使用方式的归类，还有更多灵活的运用得结合实际例子运用到项目中。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的联结&quot;&gt;&lt;a href=&quot;#字符串的联结&quot; class=&quot;headerlink&quot; title=&quot;字符串的联结&quot;&gt;&lt;/a&gt;字符串的联结&lt;/h1&gt;&lt;p&gt;1、使用join方法(适合少量字符串，低效)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;String names=Strin
      
    
    </summary>
    
      <category term="Java学习" scheme="http://yoursite.com/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="String" scheme="http://yoursite.com/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Java方法调用和重载</title>
    <link href="http://yoursite.com/2019/06/05/Java%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E5%92%8C%E9%87%8D%E8%BD%BD/"/>
    <id>http://yoursite.com/2019/06/05/Java方法调用和重载/</id>
    <published>2019-06-05T01:38:21.000Z</published>
    <updated>2019-06-05T19:08:03.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="方法的调用方式"><a href="#方法的调用方式" class="headerlink" title="方法的调用方式"></a>方法的调用方式</h2><ol><li>单独调用；</li><li>打印调用；</li><li>赋值调用；</li></ol><h2 id="判断两个数是否相同（扩展：判断一个数是否odd）"><a href="#判断两个数是否相同（扩展：判断一个数是否odd）" class="headerlink" title="判断两个数是否相同（扩展：判断一个数是否odd）"></a>判断两个数是否相同（扩展：判断一个数是否odd）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class DemoSame &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(isSame(20,20));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static boolean isSame(int a,int b) &#123;</span><br><span class="line">       return a==b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="求1-100之间整数的和"><a href="#求1-100之间整数的和" class="headerlink" title="求1~100之间整数的和"></a>求1~100之间整数的和</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public class DemoSum &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(&quot;结果是：&quot;+getSum());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static int getSum() &#123;</span><br><span class="line">        int sum = 0;</span><br><span class="line">        for (int i = 1; i &lt;= 100; i++) &#123;</span><br><span class="line">            sum+=i;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        return sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="按要求打印指定次数的HelloWorld文件"><a href="#按要求打印指定次数的HelloWorld文件" class="headerlink" title="按要求打印指定次数的HelloWorld文件"></a>按要求打印指定次数的HelloWorld文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class DemoPrint &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        printCount(15);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void printCount(int num)  &#123;</span><br><span class="line"></span><br><span class="line">        for(int i=0;i&lt;num;i++)&#123;</span><br><span class="line">            System.out.println(&quot;HelloWorld!&quot;+(i+1));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>笔记：</p><ol><li>定义方法的时候注意分析参数、返回值的类型。</li><li>方法构建的三要素：返回值、方法名称规范、参数列表。</li><li>对于void，没有返回值的方法，只能单独调用。</li><li>对于方法重载（overload）的掌握，方法名一样参数列表不一样<br>（即一个方法实现多个类似功能）。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;方法的调用方式&quot;&gt;&lt;a href=&quot;#方法的调用方式&quot; class=&quot;headerlink&quot; title=&quot;方法的调用方式&quot;&gt;&lt;/a&gt;方法的调用方式&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;单独调用；&lt;/li&gt;
&lt;li&gt;打印调用；&lt;/li&gt;
&lt;li&gt;赋值调用；&lt;/li&gt;
&lt;/o
      
    
    </summary>
    
      <category term="Java学习" scheme="http://yoursite.com/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GithubPages搭建网站</title>
    <link href="http://yoursite.com/2019/06/01/Hexo-GithubPages%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"/>
    <id>http://yoursite.com/2019/06/01/Hexo-GithubPages搭建网站/</id>
    <published>2019-06-01T03:47:13.000Z</published>
    <updated>2019-06-01T12:03:13.634Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;折腾了几天终于是把自己的个人博客给搭建好了，我利用的是Hexo+GithubPages的形式.过程中参考了许多大佬的文章，也在配置优化博客的时候收藏了很多很不错的博客。（PS：遇到好看的博客记得收藏，能有不少灵感和思路，还可以get新功能。）</p><h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><h2 id="博客的搭建过程主要是下面几步："><a href="#博客的搭建过程主要是下面几步：" class="headerlink" title="博客的搭建过程主要是下面几步："></a>博客的搭建过程主要是下面几步：<br></h2><ol><li>安装Node.js</li><li>安装Git</li><li>安装Hexo博客框架</li><li>部署到Github上</li><li>绑定域名</li></ol><h3 id="安装Node-js和Git"><a href="#安装Node-js和Git" class="headerlink" title="安装Node.js和Git"></a>安装Node.js和Git</h3><p>Node.js下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>Git软件下载地址：<a href="https://git-scm.com/download" target="_blank" rel="noopener">https://git-scm.com/download</a></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>Hexo就是我们的博客框架，因为用的是Markdown解析文章，可以利用靓丽的主题快速高效地生成静态网页。  </p><p>首先在本地磁盘中建立一个Hexo文件夹(自己喜欢的名字就行)用于存储本地文件（使用于本地文件保存以及测试）</p><p>然后在新建的Hexo文件夹的根目录下右键打开git bash命令框（每次对博客或者主题进行修改都必须在该文件夹下打开git bash进行操作，别的地方打开操作命令无效）</p><p>在命令框中输入命令代码安装Hexo：</p><p><code>npm install -g hexo-cli  #-g表示全局安装</code></p><p>安装完成后输入以下命令对Hexo进行初始化：</p><p><code>hexo init   #初始化</code></p><p>然后进行本地运行测试：</p><pre><code>hexo clean  # 清理缓存hexo g      # 等同于hexo generate，生成静态文件hexo s      # 等同于hexo server，在本地服务器运行</code></pre><p>再就是打开浏览器地址栏输入：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 便可以预览生成的博客框架了。（这里要注意输入<strong>hexo s</strong>命令后，git命令框是会进入锁定模式，要执行<strong>CTRL+C</strong>的命令后才会解除锁定并可以继续输入命令进行操作）</p><p>还有就是在命令框里对Hexo进行操作的时候<strong>CTRL+C</strong>是退出当前的预览模式，并不是复制。这里的复制粘帖要通过鼠标右键进行。</p><h3 id="如何部署到Github上"><a href="#如何部署到Github上" class="headerlink" title="如何部署到Github上"></a>如何部署到Github上</h3><ol><li>注册个人Github账号</li><li>在Github首页点击Start Project</li><li>创建Repository</li></ol><p>在填写Repository name仓库名的时候，名字的格式必须是 username.github.io，username必须与你的Github用户名一样。</p><h4 id="绑定到Github上"><a href="#绑定到Github上" class="headerlink" title="绑定到Github上"></a>绑定到Github上</h4><h5 id="修改站点配置文件-config-yml"><a href="#修改站点配置文件-config-yml" class="headerlink" title="修改站点配置文件_config.yml"></a>修改站点配置文件_config.yml</h5><blockquote><p>要注意站点配置文件和主题配置文件名称都是一样的_config.yml，站点配置文件在网站根目录，主题配置文件在根目录下的theme文件的具体theme下的_config.yml。</p></blockquote><p>在建立的博客文件夹的根目录下有个站点配置文件_config.yml,打开_config.yml找到deploy这一栏进行配置修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">    github: https://github.com/username/username.github.io.git,master</span><br></pre></td></tr></table></figure><p>每个代码语句的冒号后面都是有一个空格的，无论是修改站点配置文件还是主题配置文件的时候都要注意这个，否则语句会无效。</p><h5 id="进行部署"><a href="#进行部署" class="headerlink" title="进行部署"></a>进行部署</h5><p>在控制台使用下面的命令行安装git插件：</p><p><code>npm install hexo-deployer-git --save</code></p><p>安装好之后在输入：</p><p><code>hexo g -d</code></p><p>操作完之后就可以访问Github提供的域名访问你自己的网站了：</p><blockquote><p>username.github.io   (用户名修改成你自己的Github用户名)</p></blockquote><h3 id="绑定自己的域名"><a href="#绑定自己的域名" class="headerlink" title="绑定自己的域名"></a>绑定自己的域名</h3><p>现在国内做的比较好的还是阿里云和腾讯云，可以挑一个平台在上面购买属于自己的域名，我自己在阿里云上购买的.xyz 的域名。</p><p>准备就绪之后进入阿里云的控制台，里面有云解析DNS的服务，在里面对域名进行解析设置。</p><p>然后在你的博客的文件夹的根目录下找到Source文件夹，用记事本在里面添加一个名为CNMAE的文件，文件内容为你自己申请的域名,例如我的是</p><blockquote><p>username.xyz</p></blockquote><p>这里注意文件保存类型为<strong>所有文件</strong>，别保存为txt类型了,会识别不了。如果保存为<strong>所有文件</strong>类型还是自动转为txt格式的话，就手动操作重命名把文件名后缀删除了。</p><p>再到Github你为搭建网站建的Repository里，点进Setting，拉到最后的Github Pages，在Custom domain那一栏填上你自己购买的域名，save保存就可以了。</p><p>完成上面的一系列操作之后一个属于自己的个人网站博客就搭建成功了，在网址输入自己的域名就可以直接访问自己搭建的网站了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>网上教程一大堆，大同小异，做的时候也遇到各种各样的坑，借鉴了不同大神的经验才做好自己的网站。后续还添加了许多好玩的功能，当是一件娱乐放松的事也很不错的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp;&amp;emsp;折腾了几天终于是把自己的个人博客给搭建好了，我利用的是Hexo+GithubPages的形式.过程中参考了许多大佬的文章，也在配置优化博客的时候收藏了很多很不错的博客。（PS：遇到好看的博客记得收藏，能有不少灵感和思路，还可以get新功能。）&lt;/p&gt;
      
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Funny" scheme="http://yoursite.com/tags/Funny/"/>
    
  </entry>
  
  <entry>
    <title>Honey</title>
    <link href="http://yoursite.com/2019/05/30/Honey/"/>
    <id>http://yoursite.com/2019/05/30/Honey/</id>
    <published>2019-05-29T20:33:59.000Z</published>
    <updated>2019-05-30T13:41:19.363Z</updated>
    
    <content type="html"><![CDATA[<p>爱你每一天</p><p>起来的第一件事就是想你<br>今天我们有自己的网站啦，只属于我们两人的专属空间。欢呼声呢？！尖叫声呢？！<br>这就是今天送你的小惊喜啦。<br>太困了，想不到写啥，就先这些吧。<br>爱你是每天都最重要的事情。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;爱你每一天&lt;/p&gt;
&lt;p&gt;起来的第一件事就是想你&lt;br&gt;今天我们有自己的网站啦，只属于我们两人的专属空间。欢呼声呢？！尖叫声呢？！&lt;br&gt;这就是今天送你的小惊喜啦。&lt;br&gt;太困了，想不到写啥，就先这些吧。&lt;br&gt;爱你是每天都最重要的事情。&lt;/p&gt;

      
    
    </summary>
    
      <category term="宝贝专柜" scheme="http://yoursite.com/categories/%E5%AE%9D%E8%B4%9D%E4%B8%93%E6%9F%9C/"/>
    
    
      <category term="宝贝" scheme="http://yoursite.com/tags/%E5%AE%9D%E8%B4%9D/"/>
    
      <category term="甜心" scheme="http://yoursite.com/tags/%E7%94%9C%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>your title</title>
    <link href="http://yoursite.com/2019/05/30/your-title/"/>
    <id>http://yoursite.com/2019/05/30/your-title/</id>
    <published>2019-05-29T16:52:01.000Z</published>
    <updated>2019-05-30T15:40:13.252Z</updated>
    
    <content type="html"><![CDATA[<p>我爱田小圈每一天</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我爱田小圈每一天&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="小可爱" scheme="http://yoursite.com/tags/%E5%B0%8F%E5%8F%AF%E7%88%B1/"/>
    
      <category term="最美的人" scheme="http://yoursite.com/tags/%E6%9C%80%E7%BE%8E%E7%9A%84%E4%BA%BA/"/>
    
      <category term="Biu特否" scheme="http://yoursite.com/tags/Biu%E7%89%B9%E5%90%A6/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/05/29/hello-world/"/>
    <id>http://yoursite.com/2019/05/29/hello-world/</id>
    <published>2019-05-29T15:27:41.931Z</published>
    <updated>2019-05-29T15:27:41.931Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
